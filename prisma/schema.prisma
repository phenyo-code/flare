generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Int
  category  String
  filter    String
  image     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]

  @@map("products")
  OrderItem OrderItem[]
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("carts")
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity   Int
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@map("cartitems")
}

model Order {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  userId          String
  shippingName    String
  shippingEmail   String
  shippingAddress String
  status          String     // e.g., 'pending', 'paid', 'shipped'
  totalPrice      Int
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  items           OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  price     Int
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])

  @@map("orderitems")
}

